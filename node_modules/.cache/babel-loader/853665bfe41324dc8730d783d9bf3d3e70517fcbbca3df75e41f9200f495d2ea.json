{"ast":null,"code":"var _jsxFileName = \"/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/slidingpanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useMap } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SlidePanel() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const togglePanel = () => {\n    setIsOpen(!isOpen);\n  };\n  map = useMap();\n  const handle = e => {\n    e.stopPropagation();\n    const center = map.getCenter();\n  };\n  `1`;\n  const handleButtonClick = e => {\n    e.stopPropagation();\n    console.log(\"other button clicked\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `slide-panel ${isOpen ? 'open' : ''}`,\n    onClick: togglePanel,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonsdiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"fibutton\",\n          onClick: handleButtonClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"sibutton\",\n            onClick: addMarker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"openclosebutton\",\n            onClick: handleButtonClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"tibutton\",\n          onClick: handleButtonClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(SlidePanel, \"zmniIDAY4vZOGATuwP2RC5r0oxY=\", false, function () {\n  return [useMap];\n});\n_c = SlidePanel;\nexport default SlidePanel;\nvar _c;\n$RefreshReg$(_c, \"SlidePanel\");","map":{"version":3,"names":["React","useState","useEffect","useMap","jsxDEV","_jsxDEV","SlidePanel","_s","isOpen","setIsOpen","togglePanel","map","handle","e","stopPropagation","center","getCenter","handleButtonClick","console","log","className","onClick","children","id","fileName","_jsxFileName","lineNumber","columnNumber","addMarker","_c","$RefreshReg$"],"sources":["/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/slidingpanel.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { useMap } from 'react-leaflet';\n\nfunction SlidePanel() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePanel = () => {\n    setIsOpen(!isOpen);\n  };\n  map = useMap()\n  const handle = (e) => {\n    e.stopPropagation();\n    \n    const center = map.getCenter()\n  };                                                                                        `1`\n\n  const handleButtonClick = (e) => {\n    e.stopPropagation();\n    console.log(\"other button clicked\")\n  }\n  return (\n    <div className={`slide-panel ${isOpen ? 'open' : ''}`} onClick={togglePanel}>\n      <div className=\"panel-content\">\n      <div className='buttonsdiv'>\n        <div id='fibutton' onClick={handleButtonClick}></div>\n        <div>\n        <div id='sibutton'onClick={addMarker}></div>\n        <div id='openclosebutton' onClick={handleButtonClick}></div>\n        </div>\n        <div id='tibutton' onClick={handleButtonClick}></div>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SlidePanel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EACDG,GAAG,GAAGR,MAAM,EAAE;EACd,MAAMS,MAAM,GAAIC,CAAC,IAAK;IACpBA,CAAC,CAACC,eAAe,EAAE;IAEnB,MAAMC,MAAM,GAAGJ,GAAG,CAACK,SAAS,EAAE;EAChC,CAAC;EAA0F,GAAE;EAE7F,MAAMC,iBAAiB,GAAIJ,CAAC,IAAK;IAC/BA,CAAC,CAACC,eAAe,EAAE;IACnBI,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACrC,CAAC;EACD,oBACEd,OAAA;IAAKe,SAAS,EAAG,eAAcZ,MAAM,GAAG,MAAM,GAAG,EAAG,EAAE;IAACa,OAAO,EAAEX,WAAY;IAAAY,QAAA,eAC1EjB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAE,QAAA,eAC9BjB,OAAA;QAAKe,SAAS,EAAC,YAAY;QAAAE,QAAA,gBACzBjB,OAAA;UAAKkB,EAAE,EAAC,UAAU;UAACF,OAAO,EAAEJ;QAAkB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eACrDtB,OAAA;UAAAiB,QAAA,gBACAjB,OAAA;YAAKkB,EAAE,EAAC,UAAU;YAAAF,OAAO,EAAEO;UAAU;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO,eAC5CtB,OAAA;YAAKkB,EAAE,EAAC,iBAAiB;YAACF,OAAO,EAAEJ;UAAkB;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACtD,eACNtB,OAAA;UAAKkB,EAAE,EAAC,UAAU;UAACF,OAAO,EAAEJ;QAAkB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACjD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACpB,EAAA,CA/BQD,UAAU;EAAA,QAMXH,MAAM;AAAA;AAAA0B,EAAA,GANLvB,UAAU;AAiCnB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}