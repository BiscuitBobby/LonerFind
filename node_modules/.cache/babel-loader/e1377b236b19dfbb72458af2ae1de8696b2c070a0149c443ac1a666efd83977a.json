{"ast":null,"code":"var _jsxFileName = \"/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/openmap.js\",\n  _s2 = $RefreshSig$();\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from 'react-leaflet';\nimport React, { useEffect, useState } from \"react\";\nimport L from 'leaflet';\nimport SlidePanel from './slidingpanel';\nimport Panel from './panel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [location, setLocation] = useState({\n    lat: 9.102308613438732,\n    lng: 76.49512052536011\n  });\n  const [markerPositions, setMarkerPositions] = useState([]);\n  const [booleanforcentermarkers, setcentermarker] = useState([]);\n  function LocationFinderDummy(_ref) {\n    _s();\n    let {\n      handleClick\n    } = _ref;\n    //  useMapEvents({\n    //   click(e) {\n    //     const newMarkerPosition = e.latlng;\n    //     setMarkerPositions((prevPositions) => [...prevPositions, newMarkerPosition]);\n    //     //send marker position to backend somehow\n    //   },\n    // });\n    var map = useMap();\n    var center = map.getCenter();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: booleanforcentermarkers.map((booleanforcentermarker, index) => {\n        if (booleanforcentermarker) {\n          /*#__PURE__*/_jsxDEV(Marker, {\n            position: center,\n            draggable: true\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this);\n        }\n      })\n    }, void 0, false);\n  }\n  _s(LocationFinderDummy, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n    return [useMap];\n  });\n  ;\n  const handleClick = e => {\n    e.stopPropagation();\n    setcentermarker(booleanforcentermarkers => [...booleanforcentermarkers, true]);\n    console.log(booleanforcentermarkers);\n  };\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n    });\n  }, []);\n  delete L.Icon.Default.prototype._getIconUrl;\n  L.Icon.Default.mergeOptions({\n    iconUrl: require('./pngegg.png'),\n    iconRetinaUrl: require('./pngegg.png'),\n    iconSize: new L.Point(30, 50),\n    shadowUrl: null,\n    shadowSize: new L.point(30, 50),\n    shadowAnchor: null\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SlidePanel, {\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Panel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      style: {\n        height: \"100vh\",\n        minHeight: \"100%\"\n      },\n      center: [location.lat, location.lng],\n      zoom: 13,\n      minZoom: 3,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(LocationFinderDummy, {\n        handleClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s2(Map, \"8npJJivtWRIeX+TamHTt7Ad0ZJU=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["MapContainer","TileLayer","Marker","Popup","useMapEvents","useMap","React","useEffect","useState","L","SlidePanel","Panel","jsxDEV","_jsxDEV","Fragment","_Fragment","Map","_s2","_s","$RefreshSig$","location","setLocation","lat","lng","markerPositions","setMarkerPositions","booleanforcentermarkers","setcentermarker","LocationFinderDummy","_ref","handleClick","map","center","getCenter","children","booleanforcentermarker","index","position","draggable","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","console","log","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","Icon","Default","prototype","_getIconUrl","mergeOptions","iconUrl","require","iconRetinaUrl","iconSize","Point","shadowUrl","shadowSize","point","shadowAnchor","style","height","minHeight","zoom","minZoom","scrollWheelZoom","url","_c","$RefreshReg$"],"sources":["/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/openmap.js"],"sourcesContent":["\nimport 'leaflet/dist/leaflet.css'\nimport { MapContainer, TileLayer, Marker, Popup ,useMapEvents, useMap} from 'react-leaflet';\nimport React, {useEffect, useState} from \"react\";\nimport L from 'leaflet';\nimport SlidePanel from './slidingpanel';\nimport Panel   from './panel';\n\n\nfunction Map() {\n  const [location, setLocation] = useState({ lat: 9.102308613438732, lng: 76.49512052536011 });\n  const [markerPositions, setMarkerPositions] = useState([])\n  const [booleanforcentermarkers, setcentermarker] = useState([])\n  function LocationFinderDummy ({handleClick}) {   \n      //  useMapEvents({\n      //   click(e) {\n      //     const newMarkerPosition = e.latlng;\n      //     setMarkerPositions((prevPositions) => [...prevPositions, newMarkerPosition]);\n      //     //send marker position to backend somehow\n      //   },\n      // });\n      var map = useMap()\n      var center = map.getCenter()\n\n      return (\n        <>\n        {booleanforcentermarkers.map((booleanforcentermarker,index) => {\n          if (booleanforcentermarker) {\n            <Marker key={index} position={center} draggable={true}/>\n          }\n        })}\n            \n        </>\n      );\n      \n  };\n\n\n  const handleClick = (e) => {\n    e.stopPropagation()\n    setcentermarker(booleanforcentermarkers => [...booleanforcentermarkers,true])\n    console.log(booleanforcentermarkers)\n  }\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      setLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      });\n    });\n  },[]);\n\n    delete L.Icon.Default.prototype._getIconUrl;\n    L.Icon.Default.mergeOptions({\n    iconUrl: require('./pngegg.png'),\n    iconRetinaUrl: require('./pngegg.png'),\n    iconSize: new L.Point(30, 50),\n    shadowUrl: null,\n    shadowSize: new L.point(30,50),\n    shadowAnchor: null,\n    });\n\n  return (\n    <div>\n    <SlidePanel handleClick={handleClick}/>\n    <Panel/>\n    <MapContainer style={{ height: \"100vh\", minHeight: \"100%\" }} center={[location.lat,location.lng]} zoom={13} minZoom={3} scrollWheelZoom={true} >\n      <LocationFinderDummy handleClick={handleClick}/>\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n    </MapContainer> \n    </div>\n  );\n}\n\n\n\n\nexport default Map;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}