{"ast":null,"code":"var _jsxFileName = \"/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/slidingpanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SlidePanel() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const togglePanel = () => {\n    setIsOpen(!isOpen);\n  };\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'Escape' && isOpen) {\n        setIsOpen(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen]);\n  const handleButtonClick = e => {\n    e.stopPropagation();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `slide-panel ${isOpen ? 'open' : ''}`,\n    onClick: togglePanel,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-content\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClick,\n        children: \"Test button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(SlidePanel, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n_c = SlidePanel;\nexport default SlidePanel;\nvar _c;\n$RefreshReg$(_c, \"SlidePanel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SlidePanel","_s","isOpen","setIsOpen","togglePanel","useEffect","handleKeyDown","e","key","window","addEventListener","removeEventListener","handleButtonClick","stopPropagation","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/slidingpanel.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction SlidePanel() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePanel = () => {\n    setIsOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.key === 'Escape' && isOpen) {\n        setIsOpen(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen]);\n  const handleButtonClick = (e) => {\n    e.stopPropagation();\n  };\n\n  return (\n    <div className={`slide-panel ${isOpen ? 'open' : ''}`} onClick={togglePanel}>\n      <div className=\"panel-content\">\n        <button onClick={handleButtonClick}>Test button</button>\n      </div>\n    </div>\n  );\n}\n\nexport default SlidePanel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAEDG,SAAS,CAAC,MAAM;IACd,MAAMC,aAAa,GAAIC,CAAC,IAAK;MAC3B,IAAIA,CAAC,CAACC,GAAG,KAAK,QAAQ,IAAIN,MAAM,EAAE;QAChCC,SAAS,CAAC,KAAK,CAAC;MAClB;IACF,CAAC;IACDM,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,aAAa,CAAC;IACjD,OAAO,MAAM;MACXG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EACZ,MAAMU,iBAAiB,GAAIL,CAAC,IAAK;IAC/BA,CAAC,CAACM,eAAe,EAAE;EACrB,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAG,eAAcZ,MAAM,GAAG,MAAM,GAAG,EAAG,EAAE;IAACa,OAAO,EAAEX,WAAY;IAAAY,QAAA,eAC1EjB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAE,QAAA,eAC5BjB,OAAA;QAAQgB,OAAO,EAAEH,iBAAkB;QAAAI,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACpD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACnB,EAAA,CA7BQD,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AA+BnB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}