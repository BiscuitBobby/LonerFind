[{"/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/index.js":"1","/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/App.js":"2","/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/landingpage.js":"3","/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/openmap.js":"4","/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/secpage.js":"5","/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/slidingpanel.js":"6","/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/panel.js":"7","/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/reportWebVitals.js":"8"},{"size":640,"mtime":1681107331575,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1680935299115,"results":"11","hashOfConfig":"10"},{"size":882,"mtime":1681293634927,"results":"12","hashOfConfig":"10"},{"size":5791,"mtime":1681403634996,"results":"13","hashOfConfig":"10"},{"size":976,"mtime":1681401563768,"results":"14","hashOfConfig":"10"},{"size":914,"mtime":1681301140745,"results":"15","hashOfConfig":"10"},{"size":863,"mtime":1680946008705,"results":"16","hashOfConfig":"10"},{"size":362,"mtime":1680603672900,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1r4eczg",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"21"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/index.js",[],[],[],"/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/App.js",["46","47"],[],"import 'leaflet/dist/leaflet.css'\n\nimport {Routes, Route, useNavigate, Router} from 'react-router-dom';\nimport Map from './pages/openmap';\nimport './App.css';\n\nimport Landingpage from './pages/landingpage';\nfunction App() {\n  return (\n  <Routes>\n    <Route path = '/' element={<Landingpage/>}/>\n    <Route path='/map' element={<Map/>}/>\n  </Routes>\n);\n}\n\nexport default App;\n","/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/landingpage.js",[],[],"/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/openmap.js",["48","49","50","51","52","53","54","55","56","57"],[],"/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/secpage.js",[],[],"/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/slidingpanel.js",["58"],[],"import React, { useState } from 'react';\nimport { useMap } from 'react-leaflet';\nconst SlidePanel = ({handleClick}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePanel = () => {\n    setIsOpen(!isOpen);\n  };\n                                                                \n  const handleButtonClick = (e) => {\n    e.stopPropagation();\n    console.log(\"other button clicked\")\n  }\n  return (\n    <div className={`slide-panel ${isOpen ? 'open' : ''}`} onClick={togglePanel}>\n      <div className=\"panel-content\">\n      <div className='buttonsdiv'>\n        <div id='fibutton' onClick={handleButtonClick}></div>\n        <div>\n        <div id='sibutton' onClick={handleClick}></div>\n        <div id='openclosebutton' onClick={handleButtonClick}></div>\n        </div>\n        <div id='tibutton' onClick={handleButtonClick}></div>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SlidePanel;","/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/pages/panel.js",["59"],[],"import React from 'react'\nimport LunchDiningIcon from '@mui/icons-material/LunchDining';\nimport SportsTennisIcon from '@mui/icons-material/SportsTennis';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport Button from 'react-bootstrap/Button';\nexport default function Panel() {\n  return (\n    <>\n    <div className='profile'></div>\n    <div className='finderbar'>\n      <div className='findersubbar'> \n      <div className='findersubsubbar'>\n        <div id='item1'>\n          <div id='itemsub1'>\n          <LunchDiningIcon/>\n          </div>\n        </div>\n        <div id='item2'>\n          <div id='itemsub2'>\n            <SportsTennisIcon/>\n          </div>\n        </div>\n        <div id='item3'>\n          <div id='itemsub3'>\n          <ShoppingCartIcon/>\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n    </>\n  )\n}\n","/home/wreck/Desktop/Projects/react_projects/mapapp/online.github.io/src/reportWebVitals.js",[],[],{"ruleId":"60","severity":1,"message":"61","line":3,"column":24,"nodeType":"62","messageId":"63","endLine":3,"endColumn":35},{"ruleId":"60","severity":1,"message":"64","line":3,"column":37,"nodeType":"62","messageId":"63","endLine":3,"endColumn":43},{"ruleId":"60","severity":1,"message":"65","line":9,"column":10,"nodeType":"62","messageId":"63","endLine":9,"endColumn":14},{"ruleId":"60","severity":1,"message":"66","line":15,"column":10,"nodeType":"62","messageId":"63","endLine":15,"endColumn":18},{"ruleId":"60","severity":1,"message":"67","line":16,"column":10,"nodeType":"62","messageId":"63","endLine":16,"endColumn":15},{"ruleId":"60","severity":1,"message":"68","line":17,"column":10,"nodeType":"62","messageId":"63","endLine":17,"endColumn":15},{"ruleId":"69","severity":1,"message":"70","line":35,"column":38,"nodeType":"71","messageId":"72","endLine":35,"endColumn":40},{"ruleId":"69","severity":1,"message":"70","line":35,"column":70,"nodeType":"71","messageId":"72","endLine":35,"endColumn":72},{"ruleId":"60","severity":1,"message":"73","line":64,"column":11,"nodeType":"62","messageId":"63","endLine":64,"endColumn":24},{"ruleId":"60","severity":1,"message":"74","line":65,"column":9,"nodeType":"62","messageId":"63","endLine":65,"endColumn":21},{"ruleId":"75","severity":1,"message":"76","line":133,"column":54,"nodeType":"77","messageId":"78","endLine":133,"endColumn":56},{"ruleId":"79","severity":1,"message":"80","line":135,"column":7,"nodeType":"81","messageId":"82","endLine":178,"endColumn":6},{"ruleId":"60","severity":1,"message":"83","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":16},{"ruleId":"60","severity":1,"message":"84","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":14},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'keys' is defined but never used.","'showMenu' is assigned a value but never used.","'menuX' is assigned a value but never used.","'menuY' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'newPostitions' is assigned a value but never used.","'eventdetails' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useMap' is defined but never used.","'Button' is defined but never used."]